// k : the quadruple sum required
    vector<vector<int> > fourSum(vector<int> &arr, int k) {
        // Your code goes here
        vector<vector<int>>res;
        if(arr.empty())
        return res;
        
        int n =arr.size();
        sort(arr.begin(),arr.end());
        
        for(int i =0; i<n; i++){
          int  k_3=k-arr[i];
            
            for(int j=i+1; j<n; j++){
              int  k_2= k_3-arr[j];
                
                int low=j+1;
                int high=n-1;
                
                while(low<high){
                    
                    int twosum=arr[low]+arr[high];
                    if(twosum<k_2){
                        low++;
                    }else if(twosum>k_2){
                        high--;
                    }else{
                        vector<int>quad(4,0);
                        quad[0]=arr[i];
                        quad[1]=arr[j];
                        quad[2]=arr[low];
                        quad[3]=arr[high];
                        res.push_back(quad);
                        
                        while(low<high && arr[low]==quad[2])++low;
                        while(low<high && arr[high]==quad[3])--high;
                    }
                   
                    
                    
                    
                }
                
                while(j+1<n && arr[j+1]==arr[j])++j;
                
                
                
            }
            while(i+1<n && arr[i+1]==arr[i])++i;
        }
        return res;